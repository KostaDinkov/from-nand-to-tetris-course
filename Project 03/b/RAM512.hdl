// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=ram0l, b=ram1l, c=ram2l, d=ram3l, e=ram4l, f=ram5l, g=ram6l, h=ram7l);
    RAM64(in=in, load=ram0l, address=address[0..5], out=ram0o);
    RAM64(in=in, load=ram1l, address=address[0..5], out=ram1o);
    RAM64(in=in, load=ram2l, address=address[0..5], out=ram2o);
    RAM64(in=in, load=ram3l, address=address[0..5], out=ram3o);
    RAM64(in=in, load=ram4l, address=address[0..5], out=ram4o);
    RAM64(in=in, load=ram5l, address=address[0..5], out=ram5o);
    RAM64(in=in, load=ram6l, address=address[0..5], out=ram6o);
    RAM64(in=in, load=ram7l, address=address[0..5], out=ram7o);
    Mux8Way16(a=ram0o, b=ram1o, c=ram2o, d=ram3o, e=ram4o, f=ram5o, g=ram6o, h=ram7o, sel=address[6..8], out=out);
}